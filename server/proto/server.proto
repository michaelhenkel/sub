syntax = "proto3";

import "policy.proto";
import "gogo.proto";

package server;
option go_package = "github.com/michaelhenkel/sub/server/proto";

service Server {
    rpc Create(ServerRequest) returns (ServerResult);
}

message ServerRequest{
    oneof serverResource{
        ServerResourceOne resourceOne = 1;
        ServerResourceTwo resourceTwo = 2;
    }

}

message ServerResult{

}

message ServerResourceOne{
    string name = 1;
    string kind = 2;
    string apiGroup = 3;
    repeated string dtype = 4 [(policy.dgraph) = "ServerResourceOne",(gogoproto.jsontag) = "dgraph.type",(gogoproto.moretags) = "dgraph:\"ServerResourceOne\""];
    ServerResourceOneSpec spec = 5;
}

message ServerResourceOneSpec{
    ServerResourceTwo srTwo = 1;
    repeated string dtype = 2 [(policy.dgraph) = "ServerResourceOne",(gogoproto.jsontag) = "dgraph.type",(gogoproto.moretags) = "dgraph:\"ServerResourceOneSpec\""];
}

message ServerResourceTwo{
    string name = 1;
    string kind = 2;
    repeated string dtype = 3 [(policy.dgraph) = "ServerResourceTwo",(gogoproto.jsontag) = "dgraph.type",(gogoproto.moretags) = "dgraph:\"ServerResourceTwo\""];
    //repeated string dtype = 3 [(policy.dgraph) = "ServerResourceTwo"];    
    ServerResourceTwoSpec spec = 4;
}

message ServerResourceTwoSpec{
    string specName = 1;
    string specValue = 2;
    repeated string dtype = 3 [(policy.dgraph) = "ResourceTwoSpec",(gogoproto.jsontag) = "dgraph.type",(gogoproto.moretags) = "dgraph:\"ResourceTwoSpec\""];
    int32 startRange = 4 [(policy.rangeMin) = 10];
    int32 endRange = 5 [(policy.rangeMax) = 20];
    policy.Pol pol = 6;
}